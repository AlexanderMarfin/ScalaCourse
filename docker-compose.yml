services:
  spark-master:
    image: bde2020/spark-master:3.3.0-hadoop3.3
    container_name: spark-master
    ports:
      - 8080:8080
      - 7077:7077
      - 9208:9208
    environment:
      - INIT_DAEMON_STEP=setup_spark
    volumes:
      - ./data:/opt/spark-apps/data
      - ./docker/jmx_prometheus_javaagent-0.19.0.jar:/opt/spark-apps/data/jmx_prometheus_javaagent-0.19.0.jar
      - ./docker/jmx-exporter.yml:/opt/spark-apps/data/jmx-exporter.yml
      - ./src/main/resources/metrics.properties:/opt/spark-apps/data/metrics.properties
      - ./target/scala-2.12/spark-education-job-assembly-0.1.jar:/opt/spark-apps/spark-education.jar
  spark-worker-1:
    image: bde2020/spark-worker:3.3.0-hadoop3.3
    container_name: spark-worker-1
    depends_on:
      - spark-master
    ports:
      - 8082:8081
    environment:
      - SPARK_MASTER=spark://spark-master:7077
    volumes:
      - ./data:/opt/spark-apps/data
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    links:
      - pushgateway
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090
    restart: unless-stopped
    volumes:
      - ./docker/prometheus:/etc/prometheus
      - prom_data:/prometheus
  pushgateway:
    restart: always
    image: bitnami/pushgateway:latest
    ports:
      - 9091:9091
  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 3000:3000
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=grafana
    volumes:
      - ./docker/grafana/datasources:/etc/grafana/provisioning/datasources
      - ./docker/grafana/dashboards:/etc/grafana/provisioning/dashboards
  arangodb:
    image: arangodb
    container_name: arangodb
    restart: on-failure
    ports:
      - 8529:8529
    environment:
      ARANGO_NO_AUTH: 1
  db-init:
    image: absaoss/spline-admin
    restart: on-failure
    entrypoint: >
      tini -g -- bash -c "
        until curl --output /dev/null --silent --get --fail http://arangodb:8529/_admin/server/availability
        do
          echo waiting for ArangoDB server to be ready...
          sleep 5
        done
        exec bash ./entrypoint.sh db-init arangodb://arangodb/spline -s
      "
    depends_on:
      - arangodb
  rest-server:
    image: absaoss/spline-rest-server
    container_name: rest-server
    restart: on-failure
    ports:
      - 7070:8080
    environment:
      SPLINE_DATABASE_CONNECTION_URL: 'arangodb://arangodb/spline'
      # by default /dev/random is used which may block
      CATALINA_OPTS: "-Dsecurerandom.source=file:/dev/./urandom -Djava.security.egd=file:/dev/./urandom"
    depends_on:
      db-init:
        condition: service_completed_successfully
  spline-web-ui:
    image: absaoss/spline-web-ui
    container_name: spline-web-ui
    environment:
      - SPLINE_CONSUMER_URL=http://localhost:7070/consumer
    ports:
      - 9092:8080
volumes:
  prom_data: